<div class="layui-fit">
    <div class="fit-col-3">
        <div id="tree"></div>
    </div>
    <div class="fit-col-7">
        <table id="gridOrganization" class="layui-hide" lay-filter="gridOrganization"></table>
    </div>
</div>
<div class="form-card" id="formOrganization">
    <div class="form-card-header"></div>
    <div class="form-card-body">
        <div class="layui-form" lay-filter="formOrganization">
            <input type="hidden" name="Id">
            <input type="hidden" name="ParentId">
            <div class="layui-form-item">
                <label class="layui-form-label required">编码</label>
                <div class="layui-input-inline">
                    <input type="text" name="Code" lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label required">名称</label>
                <div class="layui-input-inline">
                    <input type="text" name="Name" lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label required">备注</label>
                <div class="layui-input-block">
                    <textarea name="Note" placeholder="" class="layui-textarea"></textarea>
                </div>
            </div>
        </div>
    </div>
    <div class="form-card-footer"></div>
</div>

<script>
    layui.use('frame', function () {
        var url = {
            GetOrganizationTree: '/Organization/GetOrganizationTree',
            DeleteOrganizations: '/Organization/DeleteOrganizations',
            SaveOrganization: '/Organization/SaveOrganization'
        };

        var $ = layui.jquery,
            tree = layui.tree,
            layer = layui.layer,
            frame = layui.frame;

        var form = frame.form({
            name: 'formOrganization',
            toolbar: [{
                text: '保存', handler: function (e) {
                    e.save(url.SaveOrganization, function () {
                        renderTree();
                    });
                }
            }]
        });

        var node = null;
        var grid = frame.grid({
            name: 'gridOrganization',
            config: {
                height: 'full-25',
                cols: [[
                    { type: 'numbers', fixed: 'left' },
                    { type: 'checkbox', fixed: 'left' },
                    { sort: true, title: '编码', field: 'Code', width: 100 },
                    { sort: true, title: '名称', field: 'Name', width: 250 },
                    { sort: true, title: '备注', field: 'Note', width: 450 }
                ]]
            },
            toolbar: {
                add: function (e) {
                    if (!node) {
                        layer.msg('请选择上级组织！');
                        return;
                    }
                    var title = getParentInfo(node.Code, node.Name);
                    form.show({ Id: '', ParentId: node.Id }, { title: title });
                },
                edit: function (e) {
                    var org = orgList.find(l => l.id === e.row.ParentId);
                    var title = org ? getParentInfo(org.data.Code, org.data.Name) : '';
                    e.editRow(form, { title: title });
                },
                remove: function (e) {
                    e.deleteRows(url.DeleteOrganizations, function () {
                        renderTree();
                    });
                }
            }
        });

        var orgList;
        function renderTree() {
            $.get(url.GetOrganizationTree, function (result) {
                orgList = result;
                var data = frame.common.list2Tree(result, '');
                grid.setData(getGridData(data.children));
                tree.render({
                    elem: '#tree', data: data, onlyIconControl: true,
                    click: function (obj) {
                        node = obj.data.data;
                        var gridData = getGridData(obj.data.children);
                        grid.setData(gridData);
                    }
                });
            });
        }

        function getParentInfo(code, name) {
            return code ? '- ' + code + '|' + name : name;
        }

        function getGridData(data) {
            if (!data) return [];
            return data.map(d => d.data);
        }

        //tree
        renderTree();
    });
</script>