<div class="layui-fit">
    <div class="fit-col" style="width:200px;">
        <div id="tree"></div>
    </div>
    <div class="fit-col" style="left:220px;">
        <table id="gridModule" class="layui-hide" lay-filter="gridModule"></table>
    </div>
</div>
<script type="text/html" id="tbModule">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="addSys">
            <i class="layui-icon layui-icon-addition"></i>添加系统
        </button>
        <button class="layui-btn layui-btn-sm" lay-event="addMod">
            <i class="layui-icon layui-icon-addition"></i>新增
        </button>
        <button class="layui-btn layui-btn-sm" lay-event="copy">
            <i class="layui-icon layui-icon-template-1"></i>复制
        </button>
        <button class="layui-btn layui-btn-sm" lay-event="remove">
            <i class="layui-icon layui-icon-delete"></i>删除
        </button>
        <button class="layui-btn layui-btn-sm" lay-event="sql">
            <i class="layui-icon layui-icon-fonts-code"></i>导出SQL
        </button>
    </div>
</script>
<script type="text/html" id="tbrModule">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>
<script type="text/html" id="dialogModule">
    <table class="layui-form form" lay-filter="formModule">
        <tr>
            <th style="width:80px;" class="required">编码</th>
            <td>
                <input type="hidden" name="Id">
                <input type="hidden" name="ParentId">
                <input type="hidden" name="Icon">
                <input type="text" name="Code" lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
            </td>
            <th style="width:80px;" class="required">
                <span id="dvIcon" style="margin-right:5px;"></span>
                <span>名称</span>
            </th>
            <td>
                <input type="text" name="Name" lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
            </td>
        </tr>
        <tr>
            <th class="required">类型</th>
            <td>
                <input type="radio" name="Type" value="菜单" title="菜单" checked>
                <input type="radio" name="Type" value="按钮" title="按钮">
            </td>
            <th class="required">目标</th>
            <td>
                <input type="radio" name="Target" value="tab" title="Tab" checked>
                <input type="radio" name="Target" value="_blank" title="Blank">
            </td>
        </tr>
        <tr>
            <th>URL</th>
            <td colspan="3">
                <input type="text" name="Url" lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
            </td>
        </tr>
        <tr>
            <th class="required">状态</th>
            <td>
                <input type="checkbox" name="Enabled" lay-skin="switch" lay-text="启用|停用" value="1">
            </td>
            <th class="required">顺序</th>
            <td>
                <input type="text" name="Sort" lay-verify="required" placeholder="" autocomplete="off" class="layui-input">
            </td>
        </tr>
        <tr>
            <th>备注</th>
            <td colspan="3">
                <textarea name="Note" placeholder="" class="layui-textarea"></textarea>
            </td>
        </tr>
    </table>
</script>

<script>
    layui.use('frame', function () {
        var url = {
            GetModuleTree: '/Module/GetModuleTree',
            CopyModules: '/Module/CopyModules',
            DeleteModules: '/Module/DeleteModules',
            ExportModules: '/Module/ExportModules',
            SaveModule: '/Module/SaveModule'
        };

        var $ = layui.jquery,
            tree = layui.tree,
            layer = layui.layer,
            frame = layui.frame;

        var form = frame.form({
            name: 'formModule',
            config: {
                area: ['550px', '290px'],
                content: $('#dialogModule').html(),
                setData: function (e) {
                    $('#dvIcon').attr('icon', e.data.Icon)
                        .html('<i class="layui-icon ' + e.data.Icon + '"></i>');
                },
                init: function (e) {
                    $('#dvIcon').click(function () {
                        var icon1 = $(this).attr('icon');
                        frame.selectIcon(icon1, function (icon) {
                            var data = e.form.getData();
                            data.Icon = icon;
                            e.form.setData(data);
                        });
                    });
                }
            },
            toolbar: [{
                text: '保存', handler: function (e) {
                    e.save(url.SaveModule, function () {
                        renderTree();
                    });
                }
            }]
        });

        var node = null;
        var grid = frame.grid({
            name: 'gridModule',
            config: {
                toolbar: '#tbModule', height: 'full-25',
                initSort: { field: 'Sort', type: 'asc' },
                cols: [[
                    { type: 'checkbox', fixed: 'left' },
                    { sort: true, title: '顺序', field: 'Sort', width: 80, align: 'center' },
                    { sort: true, title: '编码', field: 'Code', width: 100 },
                    {
                        sort: true, title: '名称', field: 'Name', width: 150, templet: function (d) {
                            return '<i class="layui-icon ' + d.Icon + '"></i>' + d.Name;
                        }
                    },
                    { sort: true, title: '类型', field: 'Type', width: 80 },
                    { sort: true, title: 'URL', field: 'Url', width: 200 },
                    {
                        sort: true, title: '状态', field: 'Enabled', width: 100, templet: function (d) {
                            var checked = d.Enabled ? ' checked' : '';
                            return '<input type="checkbox" lay-skin="switch" lay-text="启用|停用" disabled' + checked + '>';
                        }
                    },
                    { fixed: 'right', title: '操作', toolbar: '#tbrModule', width: 120, align: 'center' }
                ]]
            },
            toolbar: {
                addSys: function (e) { showForm(''); },
                addMod: function (e) {
                    if (!node) {
                        layer.msg('请选择上级模块！');
                        return;
                    }
                    showForm(node.Id);
                },
                copy: function (e) {
                    e.selectRows(function (e) {
                        copyToModule(function (data) {
                            frame.post(url.CopyModules, {
                                data: JSON.stringify(e.ids), mid: data.Id
                            }, function () {
                                renderTree();
                            });
                        });
                    });
                },
                remove: function (e) { deleteModules(e); },
                edit: function (e) { e.editRow(form); },
                del: function (e) { deleteModules(e); },
                sql: function (e) {
                    selectModule(function (list) {
                        var data = list.map(d => d.id);
                        frame.common.download(url.ExportModules, {
                            data: JSON.stringify(data)
                        });
                    });
                }
            }
        });

        function showForm(pid) {
            form.show({ Id: '', ParentId: pid, Icon: 'layui-icon-file', Enabled: 1 });
        }

        var copyNode = null;
        function copyToModule(callback) {
            frame.open({
                title: '复制到',
                area: ['250px', '200px'],
                content: '<div id="treeModule"></div>',
                btn: ['确定', '关闭'],
                yes: function (index) {
                    layer.close(index);
                    callback && callback(copyNode);
                },
                btn2: function (index) {
                    layer.close(index);
                },
                success: function (layero) {
                    tree.render({
                        id: 'treeModule', elem: '#treeModule',
                        data: treeData, click: function (obj) {
                            copyNode = obj.data.module;
                            var title = '复制到 - ' + copyNode.Name;
                            $(layero).find('.layui-layer-title').html(title);
                        }
                    });
                }
            });
        }

        function deleteModules(e) {
            e.deleteRows(url.DeleteModules, function () {
                renderTree();
            });
        }

        function selectModule(callback) {
            frame.open({
                title: '导出SQL',
                area: ['450px', '300px'],
                content: '<div id="treeSql"></div>',
                btn: ['确定', '关闭'],
                yes: function () {
                    layer.close(layer.index);
                    var data = tree.getChecked('treeSql');
                    callback && callback(frame.common.tree2List(data, ''));
                },
                btn2: function () {
                    layer.close(layer.index);
                },
                success: function () {
                    tree.render({
                        id: 'treeSql', elem: '#treeSql',
                        data: treeData, showCheckbox: true
                    });
                }
            });
        }

        var treeData;
        function renderTree() {
            $.get(url.GetModuleTree, function (result) {
                treeData = frame.common.list2Tree(result, '');
                grid.setData(getGridData(treeData));
                tree.render({
                    elem: '#tree', data: treeData, onlyIconControl: true,
                    click: function (obj) {
                        node = obj.data.module;
                        var gridData = getGridData(obj.data.children);
                        grid.setData(gridData);
                    }
                });
            });
        }

        function getGridData(data) {
            if (!data) return [];
            return data.map(d => d.module);
        }

        //tree
        renderTree();
    });
</script>